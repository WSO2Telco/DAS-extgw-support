<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>Sparkscript-hubAnalytics-GenericReportsStats</Name>
    <Script>
        CREATE TEMPORARY TABLE ORG_WSO2TELCO_ANALYTICS_HUB_STREAM_PROCESSEDSTATISTICS
        USING CarbonAnalytics
        OPTIONS(tableName "ORG_WSO2TELCO_ANALYTICS_HUB_STREAM_PROCESSEDSTATISTICS");

        CREATE TEMPORARY TABLE APIHourlyTrafficSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_traffic_summary_per_hour",
        schema "
        year INT -i,
        month INT -i,
        day INT -i,
        hour INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        totalCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,month,day,hour,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction"
        );

        CREATE TEMPORARY TABLE APIDailyTrafficSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_traffic_summary_per_day",
        schema "
        year INT -i,
        month INT -i,
        day INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        totalCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,month,day,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction"
        );



        CREATE TEMPORARY TABLE APIMonthlyTrafficSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_traffic_summary_per_month",
        schema "
        year INT -i,
        month INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        totalCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,month,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction");


        CREATE TEMPORARY TABLE APIYearlyTrafficSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_traffic_summary_per_year",
        schema "
        year INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        totalCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction");


        CREATE TEMPORARY TABLE APIHourlyFailureSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_failure_summary_per_hour",
        schema "
        year INT -i,
        month INT -i,
        day INT -i,
        hour INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        errorMessageId STRING -i,
        totalFailureCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,month,day,hour,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction,errorMessageId"
        );


        CREATE TEMPORARY TABLE APIDailyFailureSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_failure_summary_per_day",
        schema "
        year INT -i,
        month INT -i,
        day INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        errorMessageId STRING -i,
        totalFailureCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,month,day,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction,errorMessageId"
        );

        CREATE TEMPORARY TABLE APIMonthlyFailureSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_failure_summary_per_month",
        schema "
        year INT -i,
        month INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        errorMessageId STRING -i,
        totalFailureCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,month,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction,errorMessageId"
        );

        CREATE TEMPORARY TABLE APIYearlyFailureSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_failure_summary_per_year",
        schema "
        year INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        errorMessageId STRING -i,
        totalFailureCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction,errorMessageId"
        );

        CREATE TEMPORARY TABLE APIHourlyResponseTimeSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_reponseTime_summary_per_hour",
        schema "
        year INT -i,
        month INT -i,
        day INT -i,
        hour INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        responseTimeRange STRING -i,
        totalResponseCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,month,day,hour,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction,,responseTimeRange"
        );


        CREATE TEMPORARY TABLE APIDailyResponseTimeSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_reponseTime_summary_per_day",
        schema "
        year INT -i,
        month INT -i,
        day INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        responseTimeRange STRING -i,
        totalResponseCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,month,day,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction,,responseTimeRange"
        );

        CREATE TEMPORARY TABLE APIMonthlyResponseTimeSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_reponseTime_summary_per_month",
        schema "
        year INT -i,
        month INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        responseTimeRange STRING -i,
        totalResponseCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,month,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction,,responseTimeRange"
        );

        CREATE TEMPORARY TABLE APIYearlyResponseTimeSummary using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_reponseTime_summary_per_year",
        schema "
        year INT -i,
        eventTimeStamp STRING -i,
        api STRING -i,
        serviceProvider STRING -i,
        apiPublisher STRING -i,
        applicationName STRING -i,
        operatorId STRING -i,
        isSuccess BOOLEAN -i,
        msisdn STRING -i,
        direction STRING -i,
        responseTimeRange STRING -i,
        totalResponseCount INTEGER -i,
        serviceProviderId STRING -i,
        operatorName STRING -i,
        apiPublisherID STRING -i,
        apiID STRING -i,
        department STRING -i,
        applicationId STRING -i",
        primaryKeys "year,eventTimeStamp,api,serviceProvider,apiPublisher,applicationName,operatorId,isSuccess,msisdn,direction,,responseTimeRange"
        );


        INSERT INTO TABLE APIHourlyTrafficSummary SELECT year,month,day,hour,cast(getHourStartingTime(year, month, day,hour) as STRING) as eventTimeStamp,first(api),first(serviceProvider), first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,count(hour) as totalCount,
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM ORG_WSO2TELCO_ANALYTICS_HUB_STREAM_PROCESSEDSTATISTICS WHERE isSuccess =true GROUP BY year, month, day,hour,operatorId, isSuccess,direction,serviceProviderId, apiPublisherID, apiID, applicationId;

        INCREMENTAL_TABLE_COMMIT APIHourlyTrafficSummary;

        INSERT INTO TABLE APIDailyTrafficSummary SELECT year,month,day,cast(getDateStartingTime(year, month, day) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,SUM(totalCount),
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM APIHourlyTrafficSummary GROUP BY year, month, day,operatorId,isSuccess,direction,serviceProviderId, apiPublisherID, apiID, applicationId;

        INCREMENTAL_TABLE_COMMIT APIDailyTrafficSummary;

        INSERT INTO TABLE APIMonthlyTrafficSummary SELECT year,month,cast(getMonthStartingTime(year, month) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,SUM(totalCount),
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM APIDailyTrafficSummary GROUP BY year, month,operatorId,isSuccess,direction,serviceProviderId,  apiPublisherID, apiID, applicationId;

        INCREMENTAL_TABLE_COMMIT APIMonthlyTrafficSummary;

        INSERT INTO TABLE APIYearlyTrafficSummary SELECT year,cast(getMonthStartingTime(year, 1) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,SUM(totalCount),
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM APIMonthlyTrafficSummary GROUP BY year,operatorId,isSuccess,direction,serviceProviderId, apiPublisherID, apiID, applicationId;

        INCREMENTAL_TABLE_COMMIT APIYearlyTrafficSummary;

        INSERT INTO TABLE APIHourlyFailureSummary SELECT year,month,day,hour,cast(getHourStartingTime(year, month, day,hour) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,errorMessageId,count(errorMessageId) as totalFailureCount,
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM ORG_WSO2TELCO_ANALYTICS_HUB_STREAM_PROCESSEDSTATISTICS WHERE isSuccess =false GROUP BY year, month, day,hour,operatorId,isSuccess,direction,errorMessageId,
        serviceProviderId, apiPublisherID, apiID,  applicationId;

        INCREMENTAL_TABLE_COMMIT APIHourlyFailureSummary;

        INSERT INTO TABLE APIDailyFailureSummary SELECT year,month,day,cast(getDateStartingTime(year, month, day) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,errorMessageId,SUM(totalFailureCount),
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM APIHourlyFailureSummary GROUP BY year, month, day,operatorId,isSuccess,direction,errorMessageId,
        serviceProviderId,  apiPublisherID, apiID,  applicationId;

        INCREMENTAL_TABLE_COMMIT APIDailyFailureSummary;

        INSERT INTO TABLE APIMonthlyFailureSummary SELECT year,month,cast(getMonthStartingTime(year, month) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,errorMessageId,SUM(totalFailureCount),
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM APIDailyFailureSummary GROUP BY year, month,operatorId,isSuccess,direction,errorMessageId,
        serviceProviderId,  apiPublisherID, apiID,  applicationId;

        INCREMENTAL_TABLE_COMMIT APIMonthlyFailureSummary;

        INSERT INTO TABLE APIYearlyFailureSummary SELECT year,cast(getMonthStartingTime(year, 1) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,errorMessageId,SUM(totalFailureCount),
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM APIMonthlyFailureSummary GROUP BY year,operatorId,isSuccess,direction,errorMessageId,
        serviceProviderId,  apiPublisherID, apiID,  applicationId;

        INCREMENTAL_TABLE_COMMIT APIYearlyFailureSummary;

        INSERT INTO TABLE APIHourlyResponseTimeSummary SELECT year,month,day,hour,cast(getHourStartingTime(year, month, day,hour) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,responseTimeRange,count(responseTimeRange) as totalResponseCount,
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM ORG_WSO2TELCO_ANALYTICS_HUB_STREAM_PROCESSEDSTATISTICS WHERE isSuccess = true GROUP BY year, month, day,hour,operatorId,isSuccess,direction,responseTimeRange,
        serviceProviderId,  apiPublisherID, apiID,  applicationId;

        INCREMENTAL_TABLE_COMMIT APIHourlyResponseTimeSummary;

        INSERT INTO TABLE APIDailyResponseTimeSummary SELECT year,month,day,cast(getDateStartingTime(year, month, day) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,responseTimeRange, SUM(totalResponseCount),
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM APIHourlyResponseTimeSummary GROUP BY year, month, day,operatorId,isSuccess,direction,responseTimeRange,
        serviceProviderId,  apiPublisherID, apiID,  applicationId;

        INCREMENTAL_TABLE_COMMIT APIDailyResponseTimeSummary;

        INSERT INTO TABLE APIMonthlyResponseTimeSummary SELECT year,month,cast(getMonthStartingTime(year, month) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,responseTimeRange, SUM(totalResponseCount),
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM APIDailyResponseTimeSummary GROUP BY year, month,operatorId,isSuccess,direction,responseTimeRange,
        serviceProviderId,  apiPublisherID, apiID,  applicationId;

        INCREMENTAL_TABLE_COMMIT APIMonthlyResponseTimeSummary;

        INSERT INTO TABLE APIYearlyResponseTimeSummary SELECT year,cast(getMonthStartingTime(year, 1) as STRING) as eventTimeStamp,first(api),first(serviceProvider),first(apiPublisher),first(applicationName),operatorId,isSuccess,first(msisdn),direction,responseTimeRange, SUM(totalResponseCount),
        serviceProviderId, first(operatorName), apiPublisherID, apiID, first(department), applicationId FROM APIMonthlyResponseTimeSummary GROUP BY year,operatorId,isSuccess,direction,responseTimeRange,
        serviceProviderId,  apiPublisherID, apiID,  applicationId;

        INCREMENTAL_TABLE_COMMIT APIYearlyResponseTimeSummary;
    </Script>
    <CronExpression>0 0/15 * * * ?</CronExpression>
</Analytics>
  
      
                          
                            
                            
                            
                            
                            
                            
                            
                            
